<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[SUNFC]]></title>
  <link href="http://monster-sun.github.io/atom.xml" rel="self"/>
  <link href="http://monster-sun.github.io/"/>
  <updated>2015-05-17T09:33:01+08:00</updated>
  <id>http://monster-sun.github.io/</id>
  <author>
    <name><![CDATA[sunfc]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[1000]]></title>
    <link href="http://monster-sun.github.io/blog/2015/05/17/1000/"/>
    <updated>2015-05-17T09:02:44+08:00</updated>
    <id>http://monster-sun.github.io/blog/2015/05/17/1000</id>
    <content type="html"><![CDATA[<p>时间限制:1000ms
单点时限:1000ms
内存限制:256MB</p>

<h3>描述</h3>

<p>小Hi最近在玩一个字符消除游戏。给定一个只包含大写字母&#8221;ABC&#8221;的字符串s，消除过程是如下进行的：</p>

<p>1)如果s包含长度超过1的由相同字母组成的子串，那么这些子串会被同时消除，余下的子串拼成新的字符串。例如&#8221;ABCCBCCCAA&#8221;中&#8221;CC&#8221;,&ldquo;CCC&#8221;和&#8221;AA&#8221;会被同时消除，余下&#8221;AB&#8221;和&#8221;B&#8221;拼成新的字符串&#8221;ABB&#8221;。</p>

<p>2)上述消除会反复一轮一轮进行，直到新的字符串不包含相邻的相同字符为止。例如”ABCCBCCCAA”经过一轮消除得到&#8221;ABB&#8221;，再经过一轮消除得到&#8221;A&#8221;</p>

<p>游戏中的每一关小Hi都会面对一个字符串s。在消除开始前小Hi有机会在s中任意位置(第一个字符之前、最后一个字符之后以及相邻两个字符之间)插入任意一个字符(&lsquo;A&rsquo;,&lsquo;B&#8217;或者&#8217;C&rsquo;)，得到字符串t。t经过一系列消除后，小Hi的得分是消除掉的字符的总数。</p>

<p>请帮助小Hi计算要如何插入字符，才能获得最高得分。</p>

<h3>输入</h3>

<p>输入第一行是一个整数T(1&lt;=T&lt;=100)，代表测试数据的数量。</p>

<p>之后T行每行一个由&#8217;A&#8217;&lsquo;B&rsquo;&lsquo;C&#8217;组成的字符串s，长度不超过100。</p>

<h3>输出</h3>

<p>对于每一行输入的字符串，输出小Hi最高能得到的分数。</p>

<h3>提示</h3>

<p>第一组数据：在&#8221;ABCBCCCAA&#8221;的第2个字符后插入&#8217;C&#8217;得到&#8221;ABCCBCCCAA&#8221;，消除后得到&#8221;A&#8221;，总共消除9个字符(包括插入的&#8217;C&#8217;)。</p>

<p>第二组数据：&#8221;AAA&#8221;插入&#8217;A&#8217;得到&#8221;AAAA&#8221;，消除后得到&#8221;&ldquo;，总共消除4个字符。</p>

<p>第三组数据：无论是插入字符后得到&#8221;AABC&#8221;,&ldquo;ABBC&#8221;还是&#8221;ABCC&#8221;都最多消除2个字符。</p>

<h3>样例输入</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>3
</span><span class='line'>ABCBCCCAA      
</span><span class='line'>AAA
</span><span class='line'>ABC</span></code></pre></td></tr></table></div></figure>


<h3>样例输出</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>9
</span><span class='line'>4
</span><span class='line'>2```
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;br&gt;
</span><span class='line'>
</span><span class='line'>##我的提交：     </span></code></pre></td></tr></table></div></figure>


<p> c 1000-answer</p>

<h1>include&lt;stdio.h></h1>

<p>int main(void){</p>

<pre><code>int a,b;

while( scanf("%d %d",&amp;a,&amp;b) == 2){

    if(a &lt; 0 || a &gt; 100)    break;

    if(a &lt; 0 || b &gt; 100)    break;

    printf("%d\n",a+b);

}

return 0;
</code></pre>

<p>}
&#8220;`</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android学习初始关于sdk的安装]]></title>
    <link href="http://monster-sun.github.io/blog/2015/05/15/sdk-install/"/>
    <updated>2015-05-15T22:26:49+08:00</updated>
    <id>http://monster-sun.github.io/blog/2015/05/15/sdk-install</id>
    <content type="html"><![CDATA[<h2>sdk快速安装方法</h2>

<p>&#160;&#160;&#160;&#160;&#160;&#160;刚开始安装eclipse的时候一切顺利，然后本地安装adt等也是很简单的事情，一路顺风。。。</p>

<p>&#160;&#160;&#160;&#160;&#160;&#160;直到安装sdk的时候出现了点问题，由于网上大多数救急办法最后在我看来真的是纯粹的浪费时间，所以自己顺便也记录一下，留待以后回顾.</p>

<!--more-->


<p>&#160;&#160;&#160;&#160;&#160;&#160;首先我在安装的时候：下载sdk => 解压 => 点击<code>sdk manager</code> => 会出现自动查找，然后一般应该选择版本安装，但是有个最大的问题就是我们大多数地方访问不了sdk默认的更新地址。。。</p>

<p>&#160;&#160;&#160;&#160;&#160;&#160;这个问题纠结了我半天，比如有的人说选择tools下的option中的<code>Force <a href="http://...sources">http://...sources</a> to be fetched using</code>那个选项便可以，然后又有的人说先离线下载那些包再一个个解压放到不同的文件夹下安装。。。反正各种版本我都试了要么费时要么费力，而且大多是不成功的，下载速度也就只有几kb/s，完全没用。。</p>

<p>&#160;&#160;&#160;&#160;&#160;&#160;下面我就讲讲我最后的解决方法，其实很简单，不就那个网站登不上么，大不了换一个啊。。国内镜像网站那么多，哪一个不是好好的，一试，果然速度飞窜，一会儿就解决了我的问题，下载速度大概400-500kb随便有(我的网速为4兆)。。</p>

<p>&#160;&#160;&#160;&#160;&#160;&#160;打开tools下option选项，将<code>HTTP Proxy Server</code>改成你选的镜像地址，然后我选了点击<code>Force <a href="http://...sources">http://...sources</a> to be fetched using</code>选项，<code>reload</code>之后马上解决。。</p>

<p><br></p>

<ul>
<li>以下是我选的镜像地址：

<ul>
<li><code>mirrors.opencas.cn</code></li>
<li><code>mirrors.neusoft.edu.cn</code></li>
</ul>
</li>
</ul>


<p><br></p>

<p>&#160;&#160;&#160;&#160;&#160;&#160;再提供一个人的博客总结的国内镜像地址大全，在<a href="http://blog.csdn.net/erlanp/article/details/10572215">中国大陆开源镜像站汇总</a>，大家可以去看看~~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[写在前面]]></title>
    <link href="http://monster-sun.github.io/blog/2015/05/14/preface/"/>
    <updated>2015-05-14T09:51:11+08:00</updated>
    <id>http://monster-sun.github.io/blog/2015/05/14/preface</id>
    <content type="html"><![CDATA[<h3>为什么搭建这个博客</h3>

<p>&#160; &#160; &#160; &#160;其实刚开始的时候没有想用这个，主要是由于自己刚学了前端的一点知识，想着自己也可以做一个试试，练练手，新手你懂得~~</p>

<p>&#160; &#160; &#160; &#160;后来做出来了一个，感觉不满意，因为即便我把它上传了也是麻烦，没时间全部在这个地方啊，要博客，出发点是温习一下学的前端知识，可做到现在又想在上面发表一些东西，如果是自己的那个，难不成又要学后端？即便不用后端的话也是很累的，完全没必要啊。。。<!--more-->忽然就想起了前阵子刚开始用的<a href="https://github.com/">github</a>，我当时记得可以用它搭建下octopress博客啊，一来兴趣就花了两天半搞了个这个，深感智商啊，多有不足。。</p>

<p>&#160; &#160; &#160; &#160;我这些时日一般因为是小白，所以笔记都很简单，一些基本知识点，都放在了<a href="http://www.wiz.cn/">为知笔记</a>上面，感觉比印象笔记好一点吧，特别是写代码部分的时候,它支持好多语言的格式，但是转眼一想，有些在学习中遇到的问题，它不在基础知识体系学习的时候，还是需要记下来的，比如安装，比如某点的强化，甚至是自己平时写点小东西（汗）。。。</p>

<p>&#160; &#160; &#160; &#160;虽然离目前的我还有些距离，但恰逢其会，还是一起弄完的好，我也不喜欢拖拖拉拉的，于是就想着搭建了一个这个博客，以后也算有个窝了，可以写点自己想写的东西，还是那句话，小白多有不足，可要谅解。</p>

<p>&#160; &#160; &#160; &#160;还是那句话，不论走到哪里，不论学到什么，初心不能忘，这个代码更不能忘，哈哈 ~~</p>

<p><br><br></p>

<p>使用Backtick Code Blocks：</p>

<figure class='code'><figcaption><span>Hello World  </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include&lt;stdio.h&gt;                       </span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
</span><span class='line'>     <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello World!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>使用基本方法：</p>

<blockquote><pre><code>#include&lt;stdio.h&gt;                       
int main(){         
printf("Hello World!");    
}
</code></pre></blockquote>
]]></content>
  </entry>
  
</feed>
